name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 
      uses: actions/setup-node@v2
      with:
        cache: 'npm'
    
    - name: Setup env file
      run: |
        touch .env
        echo SERVER_PORT=${{secrets.SERVER_PORT}} >> .env
        echo C_CHAIN_BC_CLIENT_BLOCK_ENDPOINT="${{secrets.C_CHAIN_BC_CLIENT_BLOCK_ENDPOINT}}" >> .env
        echo X_CHAIN_BC_CLIENT_BLOCK_ENDPOINT="${{secrets.X_CHAIN_BC_CLIENT_BLOCK_ENDPOINT}}" >> .env
        echo P_CHAIN_BC_CLIENT_BLOCK_ENDPOINT="${{secrets.P_CHAIN_BC_CLIENT_BLOCK_ENDPOINT}}" >> .env
        echo X_CHAIN_ID="${{secrets.X_CHAIN_ID}}" >> .env
        echo P_CHAIN_ID="${{secrets.P_CHAIN_ID}}" >> .env
        echo C_CHAIN_ID="${{secrets.C_CHAIN_ID}}" >> .env
        echo ORTELIUS_API_ENDPOINT="${{secrets.ORTELIUS_API_ENDPOINT}}" >> .env
        cat .env
    
    - name: Run tests
      run: |
        npm ci
        npm run build --if-present
        npm test
        
    - name: Docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/avalanche-explorer-apiD
      
    - name: Docker push
      run: docker push ${{secrets.DOCKER_USER}}/avalanche-explorer-apiD   